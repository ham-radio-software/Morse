//
//  LocalizedStrings.swift
//  Morse
//
//  Created by Shuyang Sun on 12/11/15.
//  Copyright © 2015 Shuyang Sun. All rights reserved.
//

import UIKit

let supportedLanguages:[String: (original:String, localized:String)] = [
	// Asia
	"ar": ("العربية", LocalizedStrings.Languages.arabic),
	"zh-Hans": ("简体中文", LocalizedStrings.Languages.chineseSimplified),
	"zh-Hant": ("正體中文", LocalizedStrings.Languages.chineseTraditional),
	// Europe
	"en-GB": ("English (U.K.)", LocalizedStrings.Languages.englishUK),
	// NA
	"en-US": ("English (U.S.)", LocalizedStrings.Languages.englishUS),
	"es": ("Español", LocalizedStrings.Languages.spanish)
]

// This is for auto correction when using Auido as Morse code input. Languages in this list will be auto-corrected with localized UITextChecker, languages are not in this list will be considered as English by default.
let canBeSpellCheckedLanguageCodes:Set<String> = ["en", "es"]
let defaultSpellCheckLanguageCode = "en"

var layoutDirection:UIUserInterfaceLayoutDirection {
	return UIView.userInterfaceLayoutDirectionForSemanticContentAttribute(.Unspecified) == .LeftToRight ? .LeftToRight : .RightToLeft
}

let ENCODE_TEXT_SHORTCUT_TITLE = NSLocalizedString("ENCODE_TEXT_SHORTCUT_TITLE", comment: "Shortcut item title for 3D touch, to start the application with text input.")
let DECODE_MORSE_SHORTCUT_TITLE = NSLocalizedString("DECODE_MORSE_SHORTCUT_TITLE", comment: "Shortcut item title for 3D touch, to start the application with Morse string input.")
let AUDIO_DECODER_SHORTCUT_TITLE = NSLocalizedString("AUDIO_DECODER_SHORTCUT_TITLE", comment: "Shortcut item title for 3D touch, to start the application with audio decoder.")
let DICTIONARY_SHORTCUT_TITLE = NSLocalizedString("DICTIONARY_SHORTCUT_TITLE", comment: "Shortcut item title for 3D touch, to start the application at Morse Dictionary page.")

struct LocalizedStrings {
	struct General {
		static let sharePromote = NSLocalizedString("SHARE_PROMOTE", comment: "When the user shares Morse code, this is the prefix string attached to it, followed by App Store URL.")
	}

	struct FeedbackEmail {
		static let subject = NSLocalizedString("FEEDBACK_EMAIL_SUBJECT", comment: "The email subject when user sends a feedback email.")
	}

	struct Prosign {
		static let wait = NSLocalizedString("WAIT_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: wait.")
		static let backToYou = NSLocalizedString("BACK-TO-YOU_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: I'm done, now back to you.")
		static let closing = NSLocalizedString("CLOSING_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: this station is closing.")
		static let attention = NSLocalizedString("!ATTENTION!_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: attention!")
		static let error = NSLocalizedString("ERROR_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: there was an error.")
		static let inviteToTransmitAnyStation = NSLocalizedString("INVITE-ANY-STATION-TO-TRANSMIT_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: any station can start to transmit now.")
		static let inviteToTransmitNamedStation = NSLocalizedString("INVITE-NAMED-STATION-TO-TRANSMIT_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: the named station can start to transmit now.")
		static let shiftToWabunCode = NSLocalizedString("SHIFT-TO-WABUN-CODE_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: shift from Morse code to Wabun code. (Wabun code is used by Japanese)")
		static let endOfContact = NSLocalizedString("END-OF-CONTACT_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: this is the end of contact.")
		static let understood = NSLocalizedString("UNDERSTOOD_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: understood.")
		static let emergency = NSLocalizedString("!!!EMERGENCY!!!_PROSIGN", comment: "One of the Morse code prosign language, please make it concise and significant (e.g. capitalize, add dashes if appropriate). This one means: emergency! (the SOS signal)")

		static let titleNewLine = NSLocalizedString("NEW_LINE_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleNewPage = NSLocalizedString("NEW_PAGE_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleWait = NSLocalizedString("WAIT_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleBreak = NSLocalizedString("BREAK_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleNewParagraph = NSLocalizedString("NEW_PARAGRAPH_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleClosing = NSLocalizedString("CLOSING_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleAttention = NSLocalizedString("ATTENTION_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleError = NSLocalizedString("ERROR_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleInviteToTransmitAnyStation = NSLocalizedString("INVITE_ANY_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleInviteToTransmitNamedStation = NSLocalizedString("INVITE_NAMED_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleShiftToWabun = NSLocalizedString("SHIFT_TO_WABUN_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleEndOfContact = NSLocalizedString("END_OF_CONTACT_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleUnderstood = NSLocalizedString("UNDERSTOOD_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titleEmergency = NSLocalizedString("EMERGENCY_PROSIGN_TITLE", comment: "There are many prosign code in Morse, this is the name of one of them.")
		static let titlesAndMorse = [
			(titleNewLine, "• — • —"),
			(titleNewPage, "• — • — •"),
			(titleWait, "• — • • •"),
			(titleBreak, "— • • • — • —"),
			(titleNewParagraph, "— • • • —"),
			(titleClosing, "— • — • • — • •"),
			(titleAttention, "— • — • —"),
			(titleError, "• • • • • • •"),
			(titleInviteToTransmitAnyStation, "— • —"),
			(titleInviteToTransmitNamedStation, "— • — — •"),
			(titleShiftToWabun, "— • • — — —"),
			(titleEndOfContact, "• • • — • —"),
			(titleUnderstood, "• • • — •"),
			(titleEmergency, "• • • — — — • • •")
		]
	}

	struct Label {
		static let topBarTextLabel = NSLocalizedString("TEXT_TRANSLATE_DIRECTION_LABEL", comment: "On top of the home screen, there are two labels indicating the translate direction. One is Text, the other is Morse.")
		static let topBarMorseLabel = NSLocalizedString("MORSE_TRANSLATE_DIRECTION_LABEL", comment: "On top of the home screen, there are two labels indicating the translate direction. One is Text, the other is Morse.")
		static let topBarMorseDictionary = NSLocalizedString("DICTIONARY_VC_TITLE", comment: "This is a label on top of the dictionary page, which is a page where you can lookup all Morse characters and representations.")
		static let wpmWithColon = NSLocalizedString("WPM_WITH_COLON", comment: "This is a label on the output page, followed by the numer of WPM (word per minute).")
		static let pitchWithColon = NSLocalizedString("PITCH_WITH_COLON", comment: "This is a label on the output page, followed by the numer of audio frequency (pitch).")
		static let tutorialOutputVC1 = NSLocalizedString("ADJUST_IN_SETTINGS_TUTORIAL", comment: "This is a label on the output page, tells the user how to change some of the values.")
		static let tutorialWaveformVC1 = NSLocalizedString("SUPPORTED_INPUT_WPM_WITH_COLON", comment: "This is a label on the output page, tells the user the range of supported WPM.")
		static let tapToStart = NSLocalizedString("TAP_ANYWHERE_TO_PLAY_OR_PAUSE_ON_OUTPUT_SCREEN", comment: "This is a label on the output page, tells user how to play or pause the output.")
		static let tapToFinish = NSLocalizedString("TAP_ANYWHERE_TO_FINISH_ON_WAVEFORM_VC", comment: "This is a label on the output page, tells user how to finish using audio input.")
		static let swipeToDismiss = NSLocalizedString("SWIPE_DOWN_OR_PINCH_TO_GO_BACK_ON_OUTPUT_SCREEN", comment: "This is a label on the output page, tells user how to go back to home page.")
	}

	struct Hint {
		static let textInputHint = NSLocalizedString("TOUCH_TO_TYPE_HINT_ON_TEXT_VIEW", comment: "There is a string on the input text view on home screen, promoting user to touch the text box to start typing.")
	}

	struct LaunchCard {
		static let text1 = NSLocalizedString("TUTORIAL_CARD_1_TEXT", comment: "When user launches the app for the first time, there are tutorial cards on the home screen. This is one of the text that will be on the screen.")
		static let text2 = NSLocalizedString("TUTORIAL_CARD_2_TEXT", comment: "When user launches the app for the first time, there are tutorial cards on the home screen. This is one of the text that will be on the screen.")
		static let text3 = NSLocalizedString("TUTORIAL_CARD_3_TEXT", comment: "When user launches the app for the first time, there are tutorial cards on the home screen. This is one of the text that will be on the screen.")
		static let text4 = NSLocalizedString("TUTORIAL_CARD_4_TEXT", comment: "When user launches the app for the first time, there are tutorial cards on the home screen. This is one of the text that will be on the screen.")
	}

	struct Settings {
		static let settings = NSLocalizedString("SETTINGS_VC_TITLE", comment: "The title for settings page.")
		static let general = NSLocalizedString("SETTINGS_CATEGORY_GENERAL", comment: "There are categories on the settings page, this is one of the category.")
		static let ui = NSLocalizedString("SETTINGS_CATEGORY_APPEARANCE", comment: "There are categories on the settings page, this is one of the category.")
		static let transmitterConfiguration = NSLocalizedString("SETTINGS_CATEGORY_TRANSMITTER_CONFIGURATION", comment: "There are categories on the settings page, this is one of the category.")
		static let upgrades = NSLocalizedString("SETTINGS_CATEGORY_UPGRADES", comment: "There are categories on the settings page, this is one of the category.")
		static let about = NSLocalizedString("SETTINGS_CATEGORY_ABOUT", comment: "There are categories on the settings page, this is one of the category.")
		static let developerOptions = NSLocalizedString("SETTINGS_CATEGORY_DEVELOPER_OPTIONS", comment: "There are categories on the settings page, this is one of the category.")
		static let languages = NSLocalizedString("SETTINGS_LANGUAGE", comment: "There are many sections on the settings page, this section let the user change the App's language.")
		static let extraTextWhenShare = NSLocalizedString("SETTINGS_SHARE_SIGNATURE", comment: "There are many sections on the settings page, this switch let the user choose if they want to copy the download link and promotional text when they copy Morse code.")
		static let brightenUpDisplayWhenOutput = NSLocalizedString("SETTINGS_OUTPUT_BRIGHTEN_SCREEN", comment: "There are many sections on the settings page, this switch let the user choose if they want to make the screen brighter when outputing Morse code.")
		static let theme = NSLocalizedString("SETTINGS_THEME", comment: "There are many sections on the settings page, this switch let the user change the color theme of this App.")
		static let autoNightMode = NSLocalizedString("SETTINGS_NIGHT_MODE_AUTO_SWICH", comment: "There are many sections on the settings page, this switch let the user toggle if the app should change to Night theme when the ambient censor detects the surrounding light is low.")
		static let audioDecoder = NSLocalizedString("SETTINGS_AUDIO_DECODER_CONFIGURATION", comment: "This button on the settings page brings up input configuration page.")
		static let output = NSLocalizedString("SETTINGS_OUTPUT_CONFIGURATION", comment: "This button on the settings page brings up output configuration page.")
		static let nightModeDescription = NSLocalizedString("SETTINGS_NIGHT_MODE_DESCRIPTION", comment: "There are many sections on the settings page, this one explains what does Auto Switch button in Appearance section do.")
		static let upgradesDescription = NSLocalizedString("SETTINGS_UPGRADES_DESCRIPTION", comment: "There are many sections on the settings page, this one explains that any purchase the user makes will remove advertising in the app.")
		static let outputBrightenScreenDescription = NSLocalizedString("SETTINGS_AUTO_BRIGHTEN_SCREEN_DESCRIPTION", comment: "Explains what does auto brighten screen do.")
		static let autoCorrectWordDescription = NSLocalizedString("When you have it on, the App will try to auto-correct mis-spelled words when decoding Morse code. The dictionary changes when you change your language setting.", comment: "Explains what Auto Correct Mis Spelled Words does.")
		static let purchaseUnlockAllThemes = NSLocalizedString("SETTINGS_PURCHASE_ALL_THEMES", comment: "A button on the settings page for user make in-app purchase to unlock all the thems.")
		static let purchaseEnableAudioDecoder = NSLocalizedString("SETTINGS_PURCHASE_AUDIO_DECODER", comment: "A button on the settings page for user make in-app purchase to enable Morse audio decoder.")
		static let purchaseRestorePurchases = NSLocalizedString("SETTINGS_RESTORE_PURCHASES", comment: "A button on the settings page for user to restore their previous purchases.")
		static let rateOnAppStore =  NSLocalizedString("SETTINGS_RATE_ON_APP_STORE", comment: "A button on the settings page for user to rate on App Store.")
		static let contactDeveloper = NSLocalizedString("SETTINGS_CONTACT_DEVELOPER", comment: "A button on the settings page to contact developer. (send developer an email)")
		static let reset = NSLocalizedString("SETTINGS_RESET_NUMBER_TO_DEFAULT_VALUE", comment: "A button on the settings page to reset some content.")
		static let wpm = NSLocalizedString("SETTINGS_WPM_TITLE_FOR_TRANS_CONFIG", comment: "Settings category: word per minute.")
		static let pitch = NSLocalizedString("SETTINGS_PITCH_TITLE_FOR_TRANS_CONFIG", comment: "Settings category: audio frequency.")
		static let audioDecoderAutoCorrect = NSLocalizedString("SETTINGS_AUTO_CORRECT_WORDS_FOR_AUDIO_DECODER", comment: "A settings that allows user to choose if they want to use auto correction on audio decoder.")
		static let done = NSLocalizedString("DONE_NUM_PAD", comment: "A Done button on the number pad.")
		static let automaticAudioDecoderValue = NSLocalizedString("SETTINGS_AUTO_AUDIO_DECODER_VALUE", comment: "A Done button on the number pad.")
	}

	struct ThemeName {
		static let defaultName = NSLocalizedString("DEFAULT_THEME", comment: "Name of the default theme.")
		static let night = NSLocalizedString("NIGHT_THEME", comment: "Name of the night theme.")
	}

	struct Languages {
		static let restartReminderFooter = NSLocalizedString("SETTINGS_RESTART_APP_AFTER_CHANGING_LANGUAGE_TUTORIAL", comment: "This is a footer on the first section in language change settings, to reminder user restart the App after changing language.")
		static let defaultGroup = NSLocalizedString("SETTINGS_LANGUAGE_GROUP_DEFAULT", comment: "Users can change language in settings app, this is one of the language groups.")
		static let asia = NSLocalizedString("SETTINGS_LANGUAGE_GROUP_ASIA", comment: "Users can change language in settings app, this is one of the language groups.")
		static let europe = NSLocalizedString("SETTINGS_LANGUAGE_GROUP_EUROPE", comment: "Users can change language in settings app, this is one of the language groups.")
		static let northAmerica = NSLocalizedString("SETTINGS_LANGUAGE_GROUP_NORTH_AMERICA", comment: "Users can change language in settings app, this is one of the language groups.")
		static let systemDefault = NSLocalizedString("SETTINGS_LANGUAGE_SYSTEM_DEFAULT", comment: "Users can change language in settings app, this is one means the language is system default.")
		static let englishUS = NSLocalizedString("SETTINGS_LANGUAGE_ENGLISH_UNITED_STATES)", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
		static let englishUK = NSLocalizedString("SETTINGS_LANGUAGE_ENGLISH_UNITED_KINGDOM", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
		static let spanish = NSLocalizedString("SETTINGS_LANGUAGE_SPANISH", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
		static let chineseSimplified = NSLocalizedString("SETTINGS_LANGUAGE_CHINESE_SIMPLIFIED", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
		static let chineseTraditional = NSLocalizedString("SETTINGS_LANGUAGE_CHINESE_TRADITIONAL", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
		static let arabic = NSLocalizedString("SETTINGS_LANGUAGE_ARABIC", comment: "Users can change language in settings app, this is one of the language name that will show in user's prefered language.")
	}

	struct Button {
		static let output = NSLocalizedString("CARD_BACK_BUTTON_OUTPUT", comment: "One of the buttons on the back of card view, it alows user to output Morse code with flash or speaker.")
		static let share = NSLocalizedString("CARD_BACK_BUTTON_SHARE", comment: "One of the buttons on the back of card view, it alows user to share Morse code.")
	}
}

extension AppDelegate {
	var currentLocaleLanguageCode:String {
		return NSLocale.preferredLanguages().first!
	}

	func updateLocalWithIdentifier(languageCode:String) {
		var locale = self.userDefaults.objectForKey(userDefaultsKeyAppleLanguages) as! [String]
		if languageCode.isEmpty {
			// Restore to default
		} else {
			// If the new locale is not the current preferred locale:
			if locale.first! != languageCode {
				// Find the locale first.
				let ind = locale.indexOf(languageCode)
				if ind != nil {
					locale.removeAtIndex(ind!)
				}
				locale.insert(languageCode, atIndex: 0)
			}
			self.userDefaults.setObject(locale, forKey: userDefaultsKeyAppleLanguages)
			self.userDefaults.synchronize()
		}

		NSNotificationCenter.defaultCenter().postNotificationName(languageDidChangeNotificationName, object: nil)
	}

	func resetLocaleToSystemDefault() {
		self.updateLocalWithIdentifier(appDelegate.firstLaunchSystemLanguageCode)
	}
}
